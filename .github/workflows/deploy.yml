name: Build and deploy Node.js app to linode
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Run tests
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm test
      - name: login to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
      - name: Set database secrets
        run: |
          kubectl delete secret dbcredentials
          kubectl create secret generic dbcredentials \
            --from-literal=username=${{ secrets.DB_USERNAME }} \
            --from-literal=password=${{ secrets.DB_PASSWORD }} \
            --from-literal=host=${{ secrets.DB_HOST }} \
            --from-literal=port=${{ secrets.DB_PORT }}

      - name: Docker Build and Push, Kubernetes apply
        run: |
          docker build --tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}
          export DOCKER_CONFIG=$(cat ~/.docker/config.json | base64 -w 0)
          sed -i'' -e 's/DOCKERHUB_USERNAME/${{ secrets.DOCKERHUB_USERNAME }}/g' -e 's/DOCKERHUB_REPOSITORY/${{ secrets.DOCKERHUB_REPOSITORY }}/g' -e 's/IMAGE_LABEL/${{ github.sha }}/g' -e "s/DOCKER_CONFIG/$DOCKER_CONFIG/g" k8s.yaml
          kubectl apply -f k8s.yaml
